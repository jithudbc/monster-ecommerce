{"version":3,"sources":["components/card/card.component.js","components/card-list/card-list.component.js","components/search-box/search-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","title","monsters","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAW,iBAAhB,UACA,qBAAKC,IAAI,UAAUC,IAAG,gCAA4BH,EAAMI,QAAQC,GAA1C,6BACpB,mCAAML,EAAMI,QAAQE,QACpB,kCAAKN,EAAMI,QAAQG,aCJhBC,G,MAAW,SAACR,GAErB,OACI,qBAAKC,UAAU,YAAf,SACID,EAAMI,QAAQK,KAAM,SAAAL,GAClB,OACC,cAAC,EAAD,CAAwBA,QAASA,GAAtBA,EAAQC,WCNrBK,G,MAAY,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAcC,EAAkB,EAAlBA,aACtC,OAEI,uBAAOC,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC6CjDG,G,wDA7Cb,aAAgB,IAAD,8BACb,gBAgBFH,aAAe,SAAAI,GAAC,OACd,EAAKC,SAAW,CAACC,YAAcF,EAAEG,OAAOC,SAhBxC,EAAKC,MAAQ,CACXC,MAAQ,iBACRC,SAAW,GACXL,YAAa,IALF,E,qDAUf,WAAqB,IAAD,OAChBM,MAAO,8CACNC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAU,CAACM,SAAWK,S,oBAQ9C,WACE,MAAkCC,KAAKR,MAA/BE,EAAR,EAAQA,SAAUL,EAAlB,EAAkBA,YACZY,EAAmBP,EAASQ,QAAQ,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASf,EAAYc,kBAInD,OACE,sBAAK/B,UAAU,MAAf,UACA,0CACE,cAAC,EAAD,CACDU,YAAa,sBACbC,aAAeiB,KAAKjB,eAGpB,cAAC,EAAD,CAAUR,QAAU0B,W,GArCTI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6a8b5828.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css'\r\n\r\nexport const Card = (props)=> {\r\n    return(\r\n        <div className= 'card-container'>\r\n        <img alt=\"monster\" src= {` https://robohash.org/${props.monster.id}?set=set2&size=180x180 `} />\r\n          <h2> {props.monster.name}</h2>\r\n          <p> {props.monster.email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Card} from '../card/card.component'\r\nimport './card-list.style.css'\r\n\r\nexport const CardList = (props)=> {\r\n   \r\n    return(\r\n        <div className='card-list'> \r\n          { props.monster.map( (monster => {\r\n              return(\r\n               <Card key={monster.id}  monster={monster}/>\r\n                 \r\n              )\r\n              \r\n          }))}\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport './search-box.style.css'\r\n\r\n\r\nexport const SearchBox = ({placeholder , handleChange}) => {\r\n   return( \r\n      \r\n       <input type=\"search\" placeholder={placeholder} onChange={handleChange}/> \r\n      \r\n   )\r\n}","import React , { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\nimport './App.css';\n\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = {\n      title : 'welcome Jithu ',\n      monsters : [],\n      searchField: ''\n    }\n   \n  }\n\n  componentDidMount() {\n      fetch ('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState( {monsters : users}))\n      \n  }\n  \n  handleChange = e => \n    this.setState ( {searchField : e.target.value})\n  \n\n  render() {\n    const { monsters ,searchField } = this.state;\n    const filteredMonsters = monsters.filter( monster => \n       monster.name.toLowerCase().includes(searchField.toLowerCase())\n     \n    )\n\n    return (\n      <div className=\"App\">\n      <h1>Monsters</h1>\n        <SearchBox\n       placeholder =\"Seacrch for Monster\" \n       handleChange= {this.handleChange}\n       />\n      \n       <CardList monster= {filteredMonsters} />\n       </div>\n   \n    )\n  }\n   \n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}